---
- name: Install Hashicorp, Kubernetes, AWS CLI, Prometheus, Grafana and other tools
  hosts: all
  become: true
  tasks:
    - name: Set DEBIAN_FRONTEND to noninteractive
      ansible.builtin.shell: export DEBIAN_FRONTEND=noninteractive

    - name: Install required packages
      apt:
        name:
          - gnupg
          - software-properties-common
          - wget
          - curl
          - gpg
        state: present

    - name: Add Hashicorp keyring to apt
      ansible.builtin.shell: >
        wget -O- https://apt.releases.hashicorp.com/gpg |
        gpg --dearmor |
        tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
      register: hashicorp_keyring_output

    - name: Verify Hashicorp keyring
      ansible.builtin.shell: >
        gpg --no-default-keyring \
        --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
        --fingerprint
      when: "'OK' in hashicorp_keyring_output.stdout"

    - name: Add Hashicorp apt repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/hashicorp.list
        line: 'deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main'

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Terraform
      apt:
        name: terraform
        state: present

    - name: Install Kubectl
      ansible.builtin.shell: >
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" &&
        curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256" &&
        echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check &&
        install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
      args:
        creates: /usr/local/bin/kubectl

    - name: Check Kubectl version
      ansible.builtin.shell: kubectl version --client

    - name: Add Helm keyring to apt
      ansible.builtin.shell: >
        curl https://baltocdn.com/helm/signing.asc |
        gpg --dearmor |
        tee /usr/share/keyrings/helm.gpg > /dev/null

    - name: Install apt-transport-https
      apt:
        name: apt-transport-https
        state: present

    - name: Add Helm apt repository
      ansible.builtin.lineinfile:
        path: /etc/apt/sources.list.d/helm-stable-debian.list
        line: 'deb [arch={{ dpkg_architecture }} signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main'

    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install Helm
      apt:
        name: helm
        state: present

    - name: Install AWS CLI and Helm Charts
  hosts: all
  become: yes
  
  tasks:
    - name: Install unzip
      apt:
        name: unzip
        state: present

    - name: Download AWS CLI zip
      get_url:
        url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
        dest: /tmp/awscliv2.zip

    - name: Extract AWS CLI zip
      unzip:
        src: /tmp/awscliv2.zip
        dest: /tmp/awscliv2

    - name: Install AWS CLI
      command: /tmp/awscliv2/aws/install

    - name: Create .aws directory
      file:
        path: ~/.aws
        state: directory
        mode: '0700'

    - name: Copy AWS config
      copy:
        src: "{{ AWS_CONFIG }}"
        dest: ~/.aws/config
        mode: '0600'

    - name: Copy AWS credentials
      copy:
        src: "{{ AWS_CREDENTIALS }}"
        dest: ~/.aws/credentials
        mode: '0600'

    - name: Add Prometheus-Community Helm Chart repository
      shell: helm repo add prometheus-community https://prometheus-community.github.io/helm-charts

    - name: Add Stable Helm Chart repository
      shell: helm repo add stable https://charts.helm.sh/stable

    - name: Add Grafana Helm Chart repository
      shell: helm repo add grafana https://grafana.github.io/helm-charts

    - name: Update Helm Chart repositories
      shell: helm repo update
